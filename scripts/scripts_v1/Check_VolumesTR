#!/bin/bash

# This script reads the image/header files for MID, Faces, Resting State & DTI
# Using a combination of fslinfo and awk, dim1-dim4 + pixdim1-pixdim4 obtained
# Values are stored in variables and confirmed whether correct.
# Read warning is produced when value is out of range

#Color formating
        #reset text
        RCol='\e[0m'
        #Bold text
        Bold='\e[1;30m'
        #blue bold
        BBlu='\e[1;34m'
        #High intensity bold red
        BIRed='\e[1;91m'
        #Underline Red
        URed='\e[4;31m'

# Set work directory
work_dir=/nfs/turbo/ahrb-data/work_dir


# for each subject in the list of subjects
for subject in $(ls $work_dir ) ; do
  echo
  echo -e "${BBlu}### Checking header information of runs for subject $subject ###${RCol}"
  echo

######
######
#  MID
######
######

for run in 01 02 ; do
	if [ -d $work_dir/$subject/func/mid/run_$run ] ; then
	echo
	echo "MID run_$run......................................................"

##using fslinfo to pull values from run_##.nii, storing all 'dim ' using grep
	dims=$(fslinfo $work_dir/$subject/func/mid/run_$run/run_$run.nii)

##above stored in dims in long format. Pulling each value by columb #
	dim1=$(echo $dims | awk '{ print $4 }') 
	dim2=$(echo $dims | awk '{ print $6 }')
	dim3=$(echo $dims | awk '{ print $8 }')
        dim4=$(echo $dims | awk '{ print $10 }')
        pixdim1=$(echo $dims | awk '{ print $14 }')
        pixdim2=$(echo $dims | awk '{ print $16 }')
        pixdim3=$(echo $dims | awk '{ print $18 }')
        pixdim4=$(echo $dims | awk '{ print $20 }')

##Once information is set using above, script checks if
##Checking DIMS 1 - DIMS 4 
echo "Checking header fslinfo *.nii dim values...."
		if [ "$dim1" != "90" ] ; then
		echo
		echo -e "${BIRed}X-axis Slices $dim1 = INCORRECT ${RCol}"
		echo
		else
		echo "X-axis slices $dim1 = OK"
		fi
                if [ "$dim2" != "90" ] ; then
                echo
                echo -e "${BIRed}Y-axis Slices $dim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-axis slices $dim2 = OK"
                fi
                if [ "$dim3" != "60" ] ; then
                echo
                echo -e "${BIRed}Z-axis Slices $dim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-axis slices $dim3 = OK"
                fi
                if [ "$dim4" != "407" ] ; then
                echo
                echo -e "${BIRed}Total Volumes $dim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Total Volumes $dim4 = OK"
                fi
## CHECKING PIXDIMS 1 - PIXDIMS 4
echo "Checking header fslinfo *.nii pixdim values...."

		if [ "$pixdim1" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}X-Voxel Size $pixdim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-Voxel Size $pixdim1 = OK"
                fi
                if [ "$pixdim2" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Y-Voxel Size $pixdim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-Voxel Size $pixdim2 = OK"
                fi
                if [ "$pixdim3" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Z-Voxel Size $pixdim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-Voxel Size $pixdim3 = OK"
                fi
                if [ "$pixdim4" != "0.800000" ] ; then
                echo
		echo -e "${BIRed}Repetition Time (TR)  $pixdim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Repetition Time (TR) $pixdim4 = OK"
                fi

	
	else
	echo
	echo -e "${BIRed}MID run_$run = DOESN'T EXIST.....skipping ${RCol}"
	echo 
	fi
done


######
######
# FACES
######
######

for run in 01 02 ; do
        if [ -d $work_dir/$subject/func/faces/run_$run ] ; then
        echo
	echo "FACES run_$run...................................................."
        

##using fslinfo to pull values from run_##.nii, storing all 'dim ' using grep
        dims=$(fslinfo $work_dir/$subject/func/faces/run_$run/run_$run.nii)

##above stored in dims in long format. Pulling each value by column #
        dim1=$(echo $dims | awk '{ print $4 }')
        dim2=$(echo $dims | awk '{ print $6 }')
        dim3=$(echo $dims | awk '{ print $8 }')
        dim4=$(echo $dims | awk '{ print $10 }')
        pixdim1=$(echo $dims | awk '{ print $14 }')
        pixdim2=$(echo $dims | awk '{ print $16 }')
        pixdim3=$(echo $dims | awk '{ print $18 }')
        pixdim4=$(echo $dims | awk '{ print $20 }')

##Once information is set using above, script checks if
##Checking DIMS 1 - DIMS 4
echo "Checking header fslinfo *.nii dim values...."

                if [ "$dim1" != "90" ] ; then
                echo
                echo -e "${BIRed}X-axis Slices $dim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-axis slices $dim1 = OK"
                fi
                if [ "$dim2" != "90" ] ; then
                echo
                echo -e "${BIRed}Y-axis Slices $dim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-axis slices $dim2 = OK"
                fi
                if [ "$dim3" != "60" ] ; then
                echo
                echo -e "${BIRed}Z-axis Slices $dim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-axis slices $dim3 = OK"
                fi
                if [ "$dim4" != "723" ] ; then
                echo
                echo -e "${BIRed}Total Volumes $dim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Total Volumes $dim4 = OK"
                fi
## CHECKING PIXDIMS 1 - PIXDIMS 4
echo "Checking header fslinfo *.nii pixdim values...."

                if [ "$pixdim1" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}X-Voxel Size $pixdim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-Voxel Size $pixdim1 = OK"
                fi
                if [ "$pixdim2" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Y-Voxel Size $pixdim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-Voxel Size $pixdim2 = OK"
                fi
                if [ "$pixdim3" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Z-Voxel Size $pixdim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-Voxel Size $pixdim3 = OK"
                fi
                if [ "$pixdim4" != "0.800000" ] ; then
                echo
                echo -e "${BIRed}Repetition Time [TR]  $pixdim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Repetition Time [TR] $pixdim4 = OK"
                fi


        else
        echo
        echo -e "${BIRed}FACES run_$run = DOESN'T EXIST.....skipping ${RCol}"
        echo
        fi
done



######
######
#  Resting State
######
######

for run in 01 02 ; do
        if [ -d $work_dir/$subject/func/resting/run_$run ] ; then
        echo "Resting State run_$run............................................"

##using fslinfo to pull values from run_##.nii, storing all 'dim ' using grep
        dims=$(fslinfo $work_dir/$subject/func/resting/run_$run/run_$run.nii)

##above stored in dims in long format. Pulling each value by columb #
        dim1=$(echo $dims | awk '{ print $4 }')
        dim2=$(echo $dims | awk '{ print $6 }')
        dim3=$(echo $dims | awk '{ print $8 }')
        dim4=$(echo $dims | awk '{ print $10 }')
        pixdim1=$(echo $dims | awk '{ print $14 }')
        pixdim2=$(echo $dims | awk '{ print $16 }')
        pixdim3=$(echo $dims | awk '{ print $18 }')
        pixdim4=$(echo $dims | awk '{ print $20 }')

##Once information is set using above, script checks if
##Checking DIMS 1 - DIMS 4
echo "Checking header fslinfo *.nii dim values...."

                if [ "$dim1" != "90" ] ; then
                echo
                echo -e "${BIRed}X-axis Slices $dim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-axis slices $dim1 = OK"
                fi
                if [ "$dim2" != "90" ] ; then
                echo
                echo -e "${BIRed}Y-axis Slices $dim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-axis slices $dim2 = OK"
                fi
                if [ "$dim3" != "60" ] ; then
                echo
                echo -e "${BIRed}Z-axis Slices $dim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-axis slices $dim3 = OK"
                fi
                if [ "$dim4" != "600" ] ; then
                echo
                echo -e "${BIRed}Total Volumes $dim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Total Volumes $dim4 = OK"
                fi
## CHECKING PIXDIMS 1 - PIXDIMS 4
echo "Checking header fslinfo *.nii pixdim values...."

                if [ "$pixdim1" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}X-Voxel Size $pixdim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-Voxel Size $pixdim1 = OK"
                fi
                if [ "$pixdim2" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Y-Voxel Size $pixdim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-Voxel Size $pixdim2 = OK"
                fi
                if [ "$pixdim3" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Z-Voxel Size $pixdim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-Voxel Size $pixdim3 = OK"
                fi
                if [ "$pixdim4" != "0.800000" ] ; then
                echo
                echo -e "${BIRed}Repetition Time (TR)  $pixdim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Repetition Time (TR) $pixdim4 = OK"
                fi


        else
        echo
        echo -e "${BIRed}Resting State run_$run = DOESN'T EXIST.....skipping ${RCol}"
        echo
        fi
done



######
######
#  DTI
######
######

for run in 01 02 ; do
        if [ -d $work_dir/$subject/DTI/dti/run_$run ] ; then
        echo
	echo "DTI run_$run......................................................"

##using fslinfo to pull values from run_##.nii, storing all 'dim ' using grep
        dims=$(fslinfo $work_dir/$subject/DTI/dti/run_$run/run_$run.nii)

##above stored in dims in long format. Pulling each value by columb #
        dim1=$(echo $dims | awk '{ print $4 }')
        dim2=$(echo $dims | awk '{ print $6 }')
        dim3=$(echo $dims | awk '{ print $8 }')
        dim4=$(echo $dims | awk '{ print $10 }')
        pixdim1=$(echo $dims | awk '{ print $14 }')
        pixdim2=$(echo $dims | awk '{ print $16 }')
        pixdim3=$(echo $dims | awk '{ print $18 }')
        pixdim4=$(echo $dims | awk '{ print $20 }')

##Once information is set using above, script checks if
##Checking DIMS 1 - DIMS 4
echo "Checking header fslinfo *.nii dim values...."

                if [ "$dim1" != "140" ] ; then
                echo
                echo -e "${BIRed}X-axis Slices $dim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-axis slices $dim1 = OK"
                fi
                if [ "$dim2" != "140" ] ; then
                echo
                echo -e "${BIRed}Y-axis Slices $dim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-axis slices $dim2 = OK"
                fi
                if [ "$dim3" != "81" ] ; then
                echo
                echo -e "${BIRed}Z-axis Slices $dim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-axis slices $dim3 = OK"
                fi
                if [ "$dim4" != "102" ] ; then
                echo
                echo -e "${BIRed}Total Volumes $dim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Total Volumes $dim4 = OK"
                fi
## CHECKING PIXDIMS 1 - PIXDIMS 4
echo "Checking header fslinfo *.nii pixdim values...."

                if [ "$pixdim1" != "1.714286" ] ; then
                echo
                echo -e "${BIRed}X-Voxel Size $pixdim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-Voxel Size $pixdim1 = OK"
                fi
                if [ "$pixdim2" != "1.714286" ] ; then
                echo
                echo -e "${BIRed}Y-Voxel Size $pixdim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-Voxel Size $pixdim2 = OK"
                fi
                if [ "$pixdim3" != "1.700000" ] ; then
                echo
                echo -e "${BIRed}Z-Voxel Size $pixdim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-Voxel Size $pixdim3 = OK"
                fi
                if [ "$pixdim4" != "4.100000" ] ; then
                echo
                echo -e "${BIRed}Repetition Time (TR)  $pixdim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Repetition Time (TR) $pixdim4 = OK"
                fi


        else
        echo
        echo -e "${BIRed}DTI run_$run = DOESN'T EXIST.....skipping ${RCol}"
        echo
        fi
done


######
######
#  Anatomy t1overlay
######
######
if [ -d $work_dir/$subject/anatomy/t1overlay_60sl ] ; then
        echo
	echo "Anatomy t1overlay................................................."

##using fslinfo to pull values from run_##.nii, storing all 'dim ' using grep
        dims=$(fslinfo $work_dir/$subject/anatomy/t1overlay_60sl/t1overlay_60sl.nii)

##above stored in dims in long format. Pulling each value by columb #
        dim1=$(echo $dims | awk '{ print $4 }')
        dim2=$(echo $dims | awk '{ print $6 }')
        dim3=$(echo $dims | awk '{ print $8 }')
        dim4=$(echo $dims | awk '{ print $10 }')
        pixdim1=$(echo $dims | awk '{ print $14 }')
        pixdim2=$(echo $dims | awk '{ print $16 }')
        pixdim3=$(echo $dims | awk '{ print $18 }')
        pixdim4=$(echo $dims | awk '{ print $20 }')

##Once information is set using above, script checks if
##Checking DIMS 1 - DIMS 4
echo "Checking header fslinfo *.nii dim values...."

                if [ "$dim1" != "256" ] ; then
                echo
                echo -e "${BIRed}X-axis Slices $dim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-axis slices $dim1 = OK"
                fi
                if [ "$dim2" != "256" ] ; then
                echo
                echo -e "${BIRed}Y-axis Slices $dim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-axis slices $dim2 = OK"
                fi
                if [ "$dim3" != "60" ] ; then
                echo
                echo -e "${BIRed}Z-axis Slices $dim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-axis slices $dim3 = OK"
                fi
                if [ "$dim4" != "1" ] ; then
                echo
                echo -e "${BIRed}Total Volumes $dim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Total Volumes $dim4 = OK"
                fi
## CHECKING PIXDIMS 1 - PIXDIMS 4
echo "Checking header fslinfo *.nii pixdim values...."

                if [ "$pixdim1" != "0.843800" ] ; then
                echo
                echo -e "${BIRed}X-Voxel Size $pixdim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-Voxel Size $pixdim1 = OK"
                fi
                if [ "$pixdim2" != "0.843800" ] ; then
                echo
                echo -e "${BIRed}Y-Voxel Size $pixdim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-Voxel Size $pixdim2 = OK"
                fi
                if [ "$pixdim3" != "2.400000" ] ; then
                echo
                echo -e "${BIRed}Z-Voxel Size $pixdim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-Voxel Size $pixdim3 = OK"
                fi
                if [ "$pixdim4" != "2.297220" ] ; then
                echo
                echo -e "${BIRed}Repetition Time [TR]  $pixdim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Repetition Time [TR] $pixdim4 = OK"
                fi


        else
        echo
        echo -e "${BIRed}Anatomy t1overlay_60sl = DOESN'T EXIST.....skipping ${RCol}"
        echo
        fi


######
######
#  T1spgr*
######
######
if [ -d $work_dir/$subject/anatomy/t1spgr_208sl ] ; then
        echo
	echo "Anatomy ts1spgr_208sl............................................."

##using fslinfo to pull values from run_##.nii, storing all 'dim ' using grep
        dims=$(fslinfo $work_dir/$subject/anatomy/t1spgr_208sl/t1spgr_208sl.nii)

##above stored in dims in long format. Pulling each value by columb #
        dim1=$(echo $dims | awk '{ print $4 }')
        dim2=$(echo $dims | awk '{ print $6 }')
        dim3=$(echo $dims | awk '{ print $8 }')
        dim4=$(echo $dims | awk '{ print $10 }')
        pixdim1=$(echo $dims | awk '{ print $14 }')
        pixdim2=$(echo $dims | awk '{ print $16 }')
        pixdim3=$(echo $dims | awk '{ print $18 }')
        pixdim4=$(echo $dims | awk '{ print $20 }')

##Once information is set using above, script checks if
##Checking DIMS 1 - DIMS 4
echo "Checking header fslinfo *.nii dim values...."
                if [ "$dim1" != "256" ] ; then
                echo
                echo -e "${BIRed}X-axis Slices $dim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-axis slices $dim1 = OK"
                fi
                if [ "$dim2" != "256" ] ; then
                echo
                echo -e "${BIRed}Y-axis Slices $dim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-axis slices $dim2 = OK"
                fi
                if [ "$dim3" != "208" ] ; then
                echo
                echo -e "${BIRed}Z-axis Slices $dim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-axis slices $dim3 = OK"
                fi
                if [ "$dim4" != "1" ] ; then
                echo
                echo -e "${BIRed}Total Volumes $dim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Total Volumes $dim4 = OK"
                fi

## CHECKING PIXDIMS 1 - PIXDIMS 4
echo "Checking header fslinfo *.nii pixdim values...."

                if [ "$pixdim1" != "1.000000" ] ; then
                echo
                echo -e "${BIRed}X-Voxel Size $pixdim1 = INCORRECT ${RCol}"
                echo
                else
                echo "X-Voxel Size $pixdim1 = OK"
                fi
                if [ "$pixdim2" != "1.000000" ] ; then
                echo
                echo -e "${BIRed}Y-Voxel Size $pixdim2 = INCORRECT ${RCol}"
                echo
                else
                echo "Y-Voxel Size $pixdim2 = OK"
                fi
                if [ "$pixdim3" != "1.000000" ] ; then
                echo
                echo -e "${BIRed}Z-Voxel Size $pixdim3 = INCORRECT ${RCol}"
                echo
                else
                echo "Z-Voxel Size $pixdim3 = OK"
                fi
                if [ "$pixdim4" != "0.006952" ] ; then
                echo
                echo -e "${BIRed}Repetition Time (TR)  $pixdim4 = INCORRECT ${RCol}"
                echo
                else
                echo "Repetition Time (TR) $pixdim4 = OK"
                fi


        else
        echo
        echo -e "${BIRed}Anatomy t1spgr_208sl = DOESN'T EXIST.....skipping ${RCol}"
        echo
        fi
done

subj_num=$(ls /nfs/turbo/ahrb-data/work_dir | wc -l)
echo
echo
echo -e "${Bold}Volume, TR and Voxel check script has completed for $subj_num subjects in the work_dir directory.${RCol}"
echo "Please refer to 'dim' to confirm the header dimensions are correct per MID, FACES, Resting State & DTI *.nii file"
echo "	Pixdim section will provide voxel size & Time Repetition (TR) for the scan."
echo
echo "If there is an error, confirm that the respective .nii filing isn't missing."
echo "If not missing, note the issue with header information for the subject."
echo
echo
